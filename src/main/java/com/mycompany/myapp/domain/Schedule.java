/*
 * Project home: https://github.com/jaxio/celerio-angular-quickstart
 * 
 * Source code generated by Celerio, an Open Source code generator by Jaxio.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Source code: https://github.com/jaxio/celerio/
 * Follow us on twitter: @jaxiosoft
 * This header can be customized in Celerio conf...
 * Template pack-angular:src/main/java/domain/Entity.java.e.vm
 */
package com.mycompany.myapp.domain;

import com.google.common.base.MoreObjects;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.logging.Logger;

import static javax.persistence.GenerationType.IDENTITY;

@Entity
@Table(name = "SCHEDULE")
public class Schedule implements Identifiable<Integer>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = Logger.getLogger(Schedule.class.getName());

    // Raw attributes
    private Integer id;
    private LocalDateTime eventTime;

    private Integer eventDurationMin;

    // Many to one
    private Room room;

    // One to one
    private Presentation presentation;

    @Override
    public String entityClassName() {
        return Schedule.class.getSimpleName();
    }

    // -- [id] ------------------------

    @Override
    @Column(name = "ID", precision = 10)
    @GeneratedValue(strategy = IDENTITY)
    @Id
    public Integer getId() {
        return id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    public Schedule id(Integer id) {
        setId(id);
        return this;
    }

    @Override
    @Transient
    public boolean isIdSet() {
        return id != null;
    }
    // -- [eventTime] ------------------------

    @Column(name = "EVENT_TIME", length = 23)
    public LocalDateTime getEventTime() {
        return eventTime;
    }

    public void setEventTime(LocalDateTime eventTime) {
        this.eventTime = eventTime;
    }

    @Column(name = "EVENT_DURATION_MIN")
    public Integer getEventDurationMin() {
        return eventDurationMin;
    }

    public void setEventDurationMin(Integer eventDurationMin) {
        this.eventDurationMin = eventDurationMin;
    }

    // -----------------------------------------------------------------
    // Many to One support
    // -----------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: Schedule.room ==> Room.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @ManyToOne(cascade = {CascadeType.PERSIST})
    public Room getRoom() {
        return room;
    }

    /**
     * Set the {@link #room} without adding this Schedule instance on the passed {@link #room}
     * If you want to preserve referential integrity we recommend to use
     * instead the corresponding adder method provided by {@link Room}
     */
    public void setRoom(Room room) {
        this.room = room;
    }

    public Schedule room(Room room) {
        setRoom(room);
        return this;
    }

    // -----------------------------------------------------------------
    // One to one
    // -----------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // Owner side of one-to-one relation: Schedule.presentationId ==> Presentation.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    @NotNull
    @JoinColumn(name = "PRESENTATION_ID", nullable = false, unique = true)
    @OneToOne(cascade = {CascadeType.PERSIST}, orphanRemoval = true)
    public Presentation getPresentation() {
        return presentation;
    }

    public void setPresentation(Presentation presentation) {
        this.presentation = presentation;
    }

    public Schedule presentation(Presentation presentation) {
        setPresentation(presentation);
        return this;
    }

    /**
     * Apply the default values.
     */
    public Schedule withDefaults() {
        return this;
    }

    /**
     * Equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof Schedule && hashCode() == other.hashCode());
    }

    private IdentifiableHashBuilder identifiableHashBuilder = new IdentifiableHashBuilder();

    @Override
    public int hashCode() {
        return identifiableHashBuilder.hash(log, this);
    }

    /**
     * Construct a readable string representation for this Schedule instance.
     * @see Object#toString()
     */
    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this) //
                .add("id", getId()) //
                .add("eventTime", getEventTime()) //
                .toString();
    }
}